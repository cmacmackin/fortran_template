#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  get_deps
#  
#  Copyright 2016 Christopher MacMackin <cmacmackin@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  

# A script which prints the dependencies for a given Fortran source file

import re
from sys import argv
import os.path

# Taken from my project FORD
USE_RE = re.compile(r"""^[^ !'"]*use(?:\s*(?:,\s*((?:non_)?intrinsic)\s*)?::\s*|\s+)(\w+)\s*""",re.IGNORECASE)
MODULE_RE = re.compile(r"""^[^ !'"]*module(?:\s+(\w+))?""",re.IGNORECASE)
SUBMODULE_RE = re.compile(r"""^[^ !'"]*submodule\s*\(\s*(\w+)\s*(?::\s*(\w+))?\s*\)\s*(?:::|\s)\s*(\w+)""",re.IGNORECASE)


moddir = argv[1]
filename = argv[2]

def get_moddir(modname):
  return os.path.join(moddir, modname)

modules = []
dependencies = []

src = open(filename,'r')
for line in src:
  use = USE_RE.search(line)
  if use:
    if not use.group(1) == 'intrinsic':
      dependencies.append(get_moddir(use.group(2).lower() + '.mod')) 
  else:
    mod = MODULE_RE.search(line)
    if mod:
      modules.append(get_moddir(mod.group(1).lower() + '.mod'))
      modules.append(get_moddir(mod.group(1).lower() + '.smod'))
    else:
      submod = SUBMODULE_RE.search(line)
      if submod:
        modules.append(get_moddir(submod.group(1).lower() + '@'
                                  + submod.group(3).lower() + '.smod'))
        if submod.group(2):
          dependencies.append(get_moddir(submod.group(1).lower() + '@'
                                         + submod.group(2).lower()
                                         + '.smod'))
        else:
          dependencies.append(get_moddir(submod.group(1).lower() + '.smod'))

src.close()

basename = os.path.splitext(filename)[0]
if len(modules) > 0:
  print(' '.join(modules) + ': ' + basename + '.o')
if len(dependencies) > 0:
  print(basename + '.o: ' + ' '.join(dependencies))
  for dep in dependencies:
    print(dep + ':')

